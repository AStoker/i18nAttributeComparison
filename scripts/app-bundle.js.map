{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/test.js"],"names":["App","message","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","instance","window","i18n","i18next","setup","backend","loadPath","lng","attributes","fallbackLng","feature","developmentLogging","start","then","setRoot","globalResources","Test"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,cAAf;AACD;;;;;;;;oBCHY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,MAFH,CAEU,cAFV,EAE0B,UAACC,QAAD,EAAc;AACpCC,aAAOC,IAAP,GAAcF,QAAd;;AAGAA,eAASG,OAAT,CAAiBN,GAAjB;;AAIA,aAAOG,SAASI,KAAT,CAAe;AACpBC,iBAAS;AACPC,oBAAU,+BADH,EADW;AAIpBC,aAAK,IAJe;AAKpBC,oBAAY,CAAC,GAAD,EAAM,MAAN,EAAc,MAAd,CALQ;AAMpBC,qBAAa,IANO;AAOpBpB,eAAO;AAPa,OAAf,CAAP;AASD,KAnBH,EAoBGqB,OApBH,CAoBW,WApBX;;AAsBA,QAAI,sBAAYrB,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYc,kBAAZ;AACD;;AAED,QAAI,sBAAYrB,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYE,MAAZ,CAAmB,iBAAnB;AACD;;AAGDH,YAAQgB,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMjB,QAAQkB,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UC3CevB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B;AAChCA,WAAOsB,eAAP,CAAuB,CAAC,yBAAD,CAAvB;AACD;;;;;;;;;;;;;;;;;;MCEYC,eAAAA,eAFZ,yCACA,qCAAc,MAAd","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport Backend from 'i18next-xhr-backend';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-i18n', (instance) => {\n      window.i18n = instance;\n\n      // register backend plugin\n      instance.i18next.use(Backend);\n\n      // adapt options to your needs (see http://i18next.com/docs/options/)\n      // make sure to return the promise of the setup method, in order to guarantee proper loading\n      return instance.setup({\n        backend: {                                  // <-- configure backend settings\n          loadPath: './locales/{{lng}}/{{ns}}.json' // <-- XHR settings for where to get the files from\n        },\n        lng: 'es',\n        attributes: ['t', 'i18n', 'test'],\n        fallbackLng: 'en',\n        debug: true\n      });\n    })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources(['resources/elements/test']);\n}\n","import {inject, customElement} from 'aurelia-framework';\n\n@inject()\n@customElement('test')\nexport class Test {\n\n}\n\n"],"sourceRoot":".."}